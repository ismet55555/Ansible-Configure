# Installing Docker and Docker Compose
---
- name: Installing Docker and Docker Compose
  hosts: all
  remote_user: pi
  become: true
  tasks:
    - name: Update apt packages
      apt:
        update_cache: "yes"
        force_apt_get: "yes"

    - name: Install packages needed for Docker
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
        force_apt_get: "yes"

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=armhf] https://download.docker.com/linux/raspbian stretch stable"
        state: present
        mode: 0666

    - name: Update apt packages
      apt:
        update_cache: "yes"
        force_apt_get: "yes"

    - name: Install Docker and components
      apt:
        name: 
          - "docker-ce"
          - "docker-ce-cli"
          - "containerd.io"
        state: present
        force_apt_get: "yes"

    - name: Create docker group
      group:
        name: "docker"
        state: present

    - name: Adding user {{ ansible_ssh_user }} to docker group
      user:
        name: "{{ ansible_ssh_user }}"
        groups: "docker"
        append: "yes"
      
    # ==========================================

    - name: Install Docker and components
      apt:
        name: 
          - libffi-dev 
          - libssl-dev
          - python3-dev
          - python3
          - python3-pip
        state: present
        force_apt_get: "yes"
      tags: docker-compose-packages
      
    - name: Install Docker-Compose
      pip:
        name: docker-compose
        executable: pip3
      tags: docker-compose

    # ==========================================

    - name: Reboot server in order for changes to take place
      shell: "sleep 1 && reboot"
      async: 1
      poll: 0







#     - name: Download docker install script
#       get_url:
#         url: https://get.docker.com -o get-docker.sh
#         dest: ~/Downloads
#         mode: 0755

#     - name: Run the docker install script
#       shell: ~/Downloads/get-docker.sh
#       args:
#         warn: no

#     - name: Remove docker install script
#       file:
#         path: ~/Downloads/get-docker.sh
#         state: absent

#     - name: Adding user {{ ansible_ssh_user }} to docker group
#       user:
#         name: "{{ ansible_ssh_user }}"
#         groups: "docker"
#         append: "yes"

#     - name: Install Docker Compose
#       get_url:
#         url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-Linux-x86_64
#         dest: "/usr/local/bin/docker-compose"
#         mode: 0755







#     # - name: Reboot server in order for changes to take place
#     #   shell: "sleep 1 && reboot"
#     #   async: 1
#     #   poll: 0



# ---
# - name: Install Docker
#   hosts: remote
#   vars:
#     CTOP_VERSION: "0.7.3"
#     DOCKER_COMPOSE_VERSION: "1.25.1"
#     DOCKER_PACKAGES:
#       - apt-transport-https
#       - ca-certificates
#       - curl
#       - gnupg-agent
#       - software-properties-common
#     USER: "YOUR_USER_ON_THE_REMOTE_SERVER"

#   tasks:
#     - name: Update apt packages
#       apt:
#         update_cache: "yes"
#         force_apt_get: "yes"

#     - name: Install packages needed for Docker
#       apt:
#         name: "{{ DOCKER_PACKAGES }}"
#         state: present
#         force_apt_get: "yes"

#     - name: Add Docker GPG apt Key
#       apt_key:
#         url: https://download.docker.com/linux/ubuntu/gpg
#         state: present

#     - name: Save the current Ubuntu release version into a variable
#       shell: lsb_release -cs
#       register: ubuntu_version

#     - name: Add Docker Repository
#       apt_repository:
#         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
#         state: present

#     - name: Update apt packages
#       apt:
#         update_cache: "yes"
#         force_apt_get: "yes"

#     - name: Install Docker
#       apt:
#         name: "docker-ce"
#         state: present
#         force_apt_get: "yes"

#     - name: Test Docker with hello world example
#       shell: "docker run hello-world"
#       register: hello_world_output

#     - name: Show output of hello word example
#       debug:
#         msg: "Container Output: {{hello_world_output.stdout}}"

#     - name: Create docker group
#       group:
#         name: "docker"
#         state: present

#     - name: Adding user {{ USER }} to docker group
#       user:
#         name: "{{ USER }}"
#         groups: "docker"
#         append: "yes"

#     - name: Install Docker Compose
#       get_url:
#         url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-Linux-x86_64
#         dest: "/usr/local/bin/docker-compose"
#         mode: 0755

#     - name: Install Ctop
#       get_url:
#         url: https://github.com/bcicen/ctop/releases/download/v{{ CTOP_VERSION }}/ctop-{{ CTOP_VERSION }}-linux-amd64
#         dest: "/usr/local/bin/ctop"
#         mode: 0755

#     - name: Reboot server in order for changes to take place
#       shell: "sleep 1 && reboot"
#       async: 1
#       poll: 0
